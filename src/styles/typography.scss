
@use 'sass:math';
@import 'measures';

$font-family-narrow: 'FS Industrie Nw', 'FSIndustrieNw-Bold', Helvetica, Arial, sans-serif;
$font-family-standard: 'FS Industrie', 'FSIndustrie-Bold', Helvetica, Arial, sans-serif;

$base-font-size: $font-size-100;

@function to-rem($value) {
    // Divide by 1 to remove "px" from the base variable.
    $unitless-base-font-size: math.div($base-font-size, 1px);

    // Remove "px" from the value being passed in (if present).
    $unitless-font-size: $value;
    @if index('px', unit($value)) != null {
        $unitless-font-size: math.div($value, 1px);
    }
    $rem-value: math.div($unitless-font-size, $unitless-base-font-size) + rem;

    @return $rem-value;
}

/* Variable Fonts */
@mixin load-custom-font($family, $filename, $type, $font-style) {
    @font-face {
        font-display: fallback;
        font-family: $family;
        font-style: $font-style;
        font-weight: 200 900;
        src: url('//sports.cbsimg.net/fonts/fs-industrie/variable/#{$type}/#{$filename}' + '.woff2') format('woff2');
    }
}

@include load-custom-font('FS Industrie', 'FSIndustrieVFStd', 'standard', 'regular');
@include load-custom-font('FS Industrie', 'FSIndustrieVFStd-Italic', 'standard', italic);
@include load-custom-font('FS Industrie Nw', 'FSIndustrieVFNw', 'narrow', 'regular');
@include load-custom-font('FS Industrie Nw', 'FSIndustrieVFNw-Italic', 'narrow', italic);

/* stylelint-disable cbs/typography */
@mixin font-style(
    $family: null,
    $height: null,
    $size: null,
    $spacing: null,
    $weight: null
) {
    @if $family {
        $family-map: (
            'narrow': $font-family-narrow,
            'standard': $font-family-standard,
        );
        @each $key, $value in $family-map {
            @if $family == $key {
                font-family: $value;
            }
        }
    }
    @if $size {
        $size-map: (
            60: $font-size-60,
            75: $font-size-75,
            90: $font-size-90,
            100: $font-size-100,
            110: $font-size-110,
            125: $font-size-125,
            150: $font-size-150,
            200: $font-size-200,
            250: $font-size-250,
            300: $font-size-300,
            400: $font-size-400,
            500: $font-size-500,
            600: $font-size-600,
        );
        @each $key, $value in $size-map {
            @if $size == $key {
                font-size: to-rem($value);
            }
        }
    }
    @if $weight {
        $weight-map: (
            'black': $font-weight-black,
            'bold': $font-weight-bold,
            'light': $font-weight-light,
            'medium': $font-weight-medium,
            'regular': $font-weight-regular,
        );
        @each $key, $value in $weight-map {
            @if $weight == $key {
                font-weight: $value;
            }
        }
    }
    @if $spacing {
        $spacing-map: (
            'loose': $letter-spacing-loose,
            'none': $letter-spacing-none,
            'tight': $letter-spacing-tight,
            'xloose': $letter-spacing-xloose,
        );
        @each $key, $value in $spacing-map {
            @if $spacing == $key {
                letter-spacing: $value;
            }
        }
    }
    @if $height {
        $height-map: (
            'body': $line-height-body,
            'comfy': $line-height-comfy,
            'none': $line-height-none,
            'normal': $line-height-normal,
        );
        @each $key, $value in $height-map {
            @if $height == $key {
                line-height: $value;
            }
        }
    }
}